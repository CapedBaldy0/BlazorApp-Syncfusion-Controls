@page "/"
@using Syncfusion.Blazor.Calendars
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Spinner
@using System.Collections.Generic

<div class="yoyo">
    <div class="row menu-bar">
        <SfMenu TValue="MenuItem">
            <MenuItems>
                <MenuItem Text="Команды">
                    <MenuItems>
                        <MenuItem Text="Создать платеж"></MenuItem>
                        <MenuItem Text="Создать заявку о замятии"></MenuItem>
                        <MenuItem Text="Склейка платежей"></MenuItem>
                        <MenuItem Text="Сверка при инкассации"></MenuItem>
                        <MenuItem Text="Отправить реестр"></MenuItem>
                        <MenuItem Text="Тарифные планы"></MenuItem>
                        <MenuItem Text="Создать проводку"></MenuItem>
                        <MenuItem Text="Отчеты"></MenuItem>

                    </MenuItems>
                </MenuItem>
                <MenuItem Text="Фильтр">
                    <MenuItems>
                        <MenuItem Text="Сбросить фильтр"></MenuItem>
                        <MenuItem Text="Установить"></MenuItem>
                        <MenuItem Text="По статусам"></MenuItem>
                        <MenuItem Text="Проблемные платежи"></MenuItem>
                        <MenuItem Text="Платежи в нефинальных статусах"></MenuItem>
                    </MenuItems>
                </MenuItem>
                <MenuItem Text="Платежи">
                    <MenuItems>
                        <MenuItem Text="Выгрузить в xls"></MenuItem>
                        <MenuItem Text="Информация о платеже"></MenuItem>
                        <MenuItem Text="Открыть родительские платежи"></MenuItem>
                        <MenuItem Text="[MMPS] Отозвать"></MenuItem>
                        <MenuItem Text="Использовать сдачу с чека."></MenuItem>
                        <MenuItem Text="[MMPS] Отправить в обработку"></MenuItem>
                        <MenuItem Text="Распечать чек"></MenuItem>
                        <MenuItem Text="[MMPS]: Выдать деньги из кассы"></MenuItem>
                        <MenuItem Text="Проверка номера и пароля"></MenuItem>
                        <MenuItem Text="[MMPS] Сброс на сдачу"></MenuItem>
                        <MenuItem Text="[MMPS) Создать пересортицу"></MenuItem>
                        <MenuItem Text="[MMPS) Создать заявку о замятии"></MenuItem>
                        <MenuItem Text="[MMPS] Повысить лимит точке"></MenuItem>
                        <MenuItem Text="[MMPS] Обнулить платеж"></MenuItem>
                        <MenuItem Text="[MMPS] Лог платежа"></MenuItem>
                        <MenuItem Text="Закрыть окно (Pays Moldcell 27.04.2022 ]"></MenuItem>
                        <MenuItem Text="Отчет"></MenuItem>
                    </MenuItems>
                </MenuItem>
                <MenuItem Text="Справка">
                    <MenuItems>
                        <MenuItem Text="Помощь F1"></MenuItem>
                        <MenuItem Text="Получатели"></MenuItem>
                        <MenuItem Text="Клиенты"></MenuItem>
                        <MenuItem Text="Настройки"></MenuItem>
                        <MenuItem Text="Конфиг"></MenuItem>
                        <MenuItem Text="О программе F2"></MenuItem>
                    </MenuItems>
                </MenuItem>
            </MenuItems>
        </SfMenu>
    </div>
    <br />
    <div class="row search-section gx-5 gy-5">
        <div class="col-xl-8">
            <form>
                <div class="form-group row">
                    <div class="form-group col-md-2">
                        <label>Дата начала</label>
                        <SfDatePicker TValue="DateTime?" Placeholder="Choose a Date"> </SfDatePicker>
                    </div>
                    <div class="form-group col-md-2">
                        <label>Дата конца</label>
                        <SfDatePicker TValue="DateTime?" Placeholder="Choose a Date"> </SfDatePicker>
                    </div>
                    <div class="form-group col-md-2">
                        <label>Yслуга</label>
                        <SfComboBox TValue="string" TItem="GameFields" AllowFiltering=true DataSource="@Games">
                            <ComboBoxEvents TValue="string" TItem="GameFields" ValueChange="OnChange" />
                            <ComboBoxFieldSettings Text="Text" Value="ID" />
                        </SfComboBox>
                    </div>
                    <div class="form-group col-md-2">
                        <label>Kлиент</label>
                        <SfComboBox TValue="string" TItem="GameFields" AllowFiltering=true DataSource="@Games">
                            <ComboBoxEvents TValue="string" TItem="GameFields" ValueChange="OnChange" />
                            <ComboBoxFieldSettings Text="Text" Value="ID" />
                        </SfComboBox>
                    </div>
                    <div class="form-group col-md-2">
                        <label>Tочика</label>
                        <SfComboBox TValue="string" TItem="GameFields" AllowFiltering=true DataSource="@Games">
                            <ComboBoxEvents TValue="string" TItem="GameFields" ValueChange="OnChange" />
                            <ComboBoxFieldSettings Text="Text" Value="ID" />
                        </SfComboBox>
                    </div>
                    <div class="form-group col-md-2">
                        <label>полициатели</label>
                        <SfComboBox TValue="string" TItem="GameFields" AllowFiltering=true DataSource="@Games">
                            <ComboBoxEvents TValue="string" TItem="GameFields" ValueChange="OnChange" />
                            <ComboBoxFieldSettings Text="Text" Value="ID" />
                        </SfComboBox>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="form-group col-md-2">
                        <SfCheckBox TChecked="bool" Label="с субдилерами" Checked="false"></SfCheckBox>
                        <SfCheckBox TChecked="bool" Label="с точностью до часа" Checked="false"></SfCheckBox>
                        <SfCheckBox TChecked="bool" Label="разб. дату конца " Checked="false"></SfCheckBox>
                    </div>
                    <div class="form-group col-md-2">
                        <label>статус</label>
                        <SfComboBox TValue="string" TItem="GameFields" AllowFiltering=true DataSource="@Games">
                            <ComboBoxEvents TValue="string" TItem="GameFields" ValueChange="OnChange" />
                            <ComboBoxFieldSettings Text="Text" Value="ID" />
                        </SfComboBox>
                    </div>
                    <div class="form-group col-md-4">
                        <label>Id/Number/Account платежа</label>
                        <SfComboBox TValue="string" TItem="GameFields" AllowFiltering=true DataSource="@Games">
                            <ComboBoxEvents TValue="string" TItem="GameFields" ValueChange="OnChange" />
                            <ComboBoxFieldSettings Text="Text" Value="ID" />
                        </SfComboBox>
                    </div>
                    <div class="form-group col-md-2">
                        <SfCheckBox TChecked="bool" Label="по времени статуса" Checked="false"></SfCheckBox>

                        <SfCheckBox TChecked="bool" Label="не выгружать атрибуты" Checked="false"></SfCheckBox>

                        <SfCheckBox TChecked="bool" Label="по типу платежа" Checked="false"></SfCheckBox>
                    </div>
                </div>
            </form>
        </div>
        <div class="col">
            <form>
                <div class="form-row" align="center">
                    <div class="col-auto">
                        <label>тип поиска</label>
                        <SfDropDownList Width="200px" TItem="GameFields" TValue="string" PopupHeight="230px" Index=2 DataSource="@Games">
                            <DropDownListEvents TItem="GameFields" TValue="string" />
                            <DropDownListFieldSettings Text="Text" Value="ID" />
                        </SfDropDownList>
                    </div>
                    <div class="col-auto">
                        <br />
                        <SfCheckBox TChecked="bool" Label="в новом окне" Checked="false"></SfCheckBox>
                        <SfButton Content="установить"></SfButton>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <br />
    <div class="row datagrid-section">
        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div id="container">
                    <SfGrid @ref="DefaultGrid" DataSource="@Orders" ContextMenuItems="@ElementContext" Height="500px" EnableHeaderFocus="true"
                    AllowSelection="true" AllowSorting="true" AllowFiltering="true" EnableHover="false" RowHeight="38">
                        <GridEditSettings AllowEditing="true" AllowDeleting="true"></GridEditSettings>
                        <GridEvents ContextMenuItemClicked="OnContextMenuClick" TValue="Order"></GridEvents>
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Menu"></GridFilterSettings>
                        <GridSelectionSettings CheckboxOnly="true" PersistSelection="true"></GridSelectionSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(Order.Id) HeaderText="Id" IsPrimaryKey="true" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.ServiceId) HeaderText="service" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.ClientId) HeaderText="Client Id" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.Total) HeaderText="Total" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.Serial) HeaderText="Serial" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.Number) HeaderText="Number" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.Value) HeaderText="Value" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.Balance) HeaderText="Balance" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.Amount) HeaderText="Amount" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.ClientId) HeaderText="ClientId" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.FullState) HeaderText="FullState" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                            <GridColumn Field=@nameof(Order.StateTime) HeaderText="StateTime" TextAlign="TextAlign.Right" Width="150"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
    </div>
    <div class="row end-info-section">
        <label>info info info info info info info info</label>
        <label>info info info info info info info info</label>
    </div>
</div>

<style>

    .form-group row {
        min-width: 1300px;
    }
</style>

@code {
    public class GameFields
    {
        public string? ID { get; set; }
        public string? Text { get; set; }
    }
    public List<GameFields> Games = new List<GameFields>()
{
        new GameFields(){ ID= "Game1", Text= "American Football" },
        new GameFields(){ ID= "Game2", Text= "Badminton" },
        new GameFields(){ ID= "Game3", Text= "Basketball" },
        new GameFields(){ ID= "Game4", Text= "Cricket" },
        new GameFields(){ ID= "Game5", Text= "Football" },
        new GameFields(){ ID= "Game6", Text= "Golf" },
        new GameFields(){ ID= "Game7", Text= "Hockey" },
        new GameFields(){ ID= "Game8", Text= "Rugby"},
        new GameFields(){ ID= "Game9", Text= "Snooker" },
        new GameFields(){ ID= "Game10", Text= "Tennis"}
     };

    public string ComboBoxValue = "Game3";
    public string ChangeValue { get; set; } = "Basketball";
    public void OnChange(Syncfusion.Blazor.DropDowns.ChangeEventArgs<string, GameFields> args)
    {
        this.ChangeValue = args.ItemData?.Text;
    }

    List<ContextMenuItemModel> ElementContext = new List<ContextMenuItemModel>(){
        new ContextMenuItemModel { Text = "Информация о платеже", Target = ".e-content", Id = "1" },
        new ContextMenuItemModel { Text = "Открыть родительские платежи", Target = ".e-content", Id = "2" },
        new ContextMenuItemModel { Text = "[MMPS] Отозвать", Target = ".e-content", Id = "3" },
        new ContextMenuItemModel { Text = "Использовать сдачу с чека.", Target = ".e-content", Id = "4" },
        new ContextMenuItemModel { Text = "[MMPS] Отправить в обработку", Target = ".e-content", Id = "5" },
        new ContextMenuItemModel { Text = "Распечать чек", Target = ".e-content", Id = "6" },
        new ContextMenuItemModel { Text = "[MMPS]: Выдать деньги из кассы", Target = ".e-content", Id = "7" },
        new ContextMenuItemModel { Text = "Проверка номера и пароля", Target = ".e-content", Id = "8" },
        new ContextMenuItemModel { Text = "[MMPS] Сброс на сдачу", Target = ".e-content", Id = "9" },
        new ContextMenuItemModel { Text = "[MMPS] Создать пересортицу", Target = ".e-content", Id = "10" },
        new ContextMenuItemModel { Text = "[MMPS] Создать заявку о замятии", Target = ".e-content", Id = "11" },
        new ContextMenuItemModel { Text = "[MMPS] Повысить лимит точке", Target = ".e-content", Id = "12" },
        new ContextMenuItemModel { Text = "[MMPS] Обнулить платеж", Target = ".e-content", Id = "13" },
        new ContextMenuItemModel { Text = "[MMPS] Лог платежа", Target = ".e-content", Id = "14" },
        new ContextMenuItemModel { Text = "Закрыть окно [Pays Moldcell 27.04.2022 ]", Target = ".e-content", Id = "15" }};

    //List<string> ElementContext = new List<string>(new string[] { "eu", "tu", "nu", "si ce ", "mare chestie" });

    private SfGrid<Order> DefaultGrid;

    public void OnContextMenuClick(ContextMenuClickEventArgs<Order> args)
    {
        if (args.Item.Id == "1")
        {
            Games.Add(new GameFields(){ ID= "Game11", Text= "Adaugat"});
        }
        if (args.Item.Id == "2")
        {
            this.DefaultGrid.Dispose();
        }
    }

    public List<MenuItem> MenuItems = new List<MenuItem>
    {
        new MenuItem
        {
            Text = "@*Add Parent Menu Item Text here*@",
            Items = new List<MenuItem>
            {
                new MenuItem{ Text= "" }
    @*Add Child Menu Item Text in Text field*@,
                new MenuItem{ Text= "" }@*Add Child Menu Item Text in Text field*@
            }
        },
        new MenuItem{ Text = "" }@*Add Parent Menu Item Text in Text field*@,
        new MenuItem{ Text = "" }@*Add Parent Menu Item Text in Text field*@
    }; @* Add More required Parent/Child menu itmes here like above *@

    public List<Order> Orders { get; set; }

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 75).Select(x => new Order()
            {
                Id = 1000 + x,
                ClientId = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                ServiceId = 1000 + x,
                Number = 10000 + x,
                Serial = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Total = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Value = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Amount = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Balance = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                StateTime = DateTime.Now.AddDays(-x),
                FullState = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)]
            }).ToList();
    }

    public class Order
    {
        public int Id { get; set; }
        public string ClientId { get; set; }
        public int ServiceId { get; set; }
        public int Number { get; set; }
        public string Account { get; set; }
        public string Serial { get; set; }
        public string Total { get; set; }
        public string Value { get; set; }
        public string Amount { get; set; }
        public string Balance { get; set; }
        public DateTime StateTime { get; set; }
        public string FullState { get; set; }
    }
}